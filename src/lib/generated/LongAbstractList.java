/* Generated by Generificator on Fri Nov 08 00:29:31 CET 2019 from AbstractList.java */

package lib.generated;

import java.util.function.*;
import lib.generated.*;
import lib.utils.Utils;

import java.util.Arrays;
import java.util.Iterator;


public abstract class LongAbstractList implements LongList {
    @Override
    public boolean equals(Object other) {
        if (!(other instanceof LongList)) return false;
        if (other == this) return true;
        if (((LongList) other).size() != this.size()) return false;

        LongIterator iter1 = this.iterator();
        LongIterator iter2 = ((LongList) other).iterator();
        while (iter1.hasNext()) {
            if (!Utils.equals(iter1.next(), iter2.next())) return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int res = 1;
        for (LongIterator iter = this.iterator(); iter.hasNext();) {
            res *= 31;
            res += Utils.hashCode(iter.next());
        }
        return res;
    }

    @Override
    public String toString() {
        return Arrays.toString(this.toArray());
    }
}